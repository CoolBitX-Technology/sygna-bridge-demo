{"version":3,"sources":["assets/img/logo.png","js/constants/action-types.ts","js/reducers/originatorReducer.ts","js/constants/status.ts","js/reducers/beneficiaryReducer.ts","js/reducers/bridgeReducer.ts","js/reducers/index.ts","js/constants/env.ts","js/sagas/api-saga.ts","js/store/index.ts","js/middleware/index.ts","js/actions/index.ts","js/components/Picker/Dropdown.jsx","js/utils/index.js","js/utils/locale.ts","js/components/Originator.tsx","js/components/Beneficiary.tsx","js/components/List/Transfer.jsx","js/components/Bridge.tsx","js/components/App.tsx","serviceWorker.js","index.tsx"],"names":["module","exports","__webpack_require__","p","ERROR","TRANSFER_REQUEST","TRANSFER_LOADED","TRANSFER_RESULT","TRANSFER_RESULT_SIGN","TRANSFER_DECRYPT","TRANSFER_DECRYPT_RESULT","TRANSFER_VERIFY","TRANSFER_VERIFY_RESULT","initState","transfer_info","beneficiary_vasp_code","originator_addr","originator_vasp_code","beneficiary_addr","transaction_currency","amount","originator_info","name","physical_address","national_identity_number","date_of_birth","unique_identity","beneficiary_info","beneficiary_name","error_msg","SUCCESS","FAILED","NONE","initialState","verified_status","sign_object","private_info","transaction","data_dt","signature","transfer_id","originator","beneficiary","sign_objects","rootReducer","combineReducers","state","arguments","length","undefined","action","type","Object","assign","payload","result","bridge","concat","toConsumableArray","index","findIndex","x","target_object","new_object","beneficiary_result","slice","BENEFICIARY_PUBLIC_KEY","BENEFICIARY_PRIVATE_KEY","ORIGINATOR_PUBLIC_KEY","ORIGINATOR_PRIVATE_KEY","watcherSage","workerSaga","regenerator_default","a","wrap","_context","prev","next","takeEvery","stop","_marked","_context2","call","getData","sent","put","t0","_marked2","fetch","then","response","json","initialiseSagaMiddleware","createSagaMiddleware","storeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","_ref","dispatch","_action$payload","encrypt_info","crypto","sygnaEncodePrivateObj","Date","signTransferData","toISOString","uuidv1","_action$payload2","sign_result","signResult","transferResultSign","decode","sygnaDecodePrivateObg","transferDecryptResult","filtered","objectSpread","verify_result","verifyObject","transferVerifyResult","run","apiSaga","Dropdown","e","onChange","this","props","_this$props","id","src","selectRef","selectedValue","title","className","marginClass","react_default","createElement","ref","bind","value","disabled","keys","map","key","idx","item","React","Component","utils","Locale","classCallCheck","createClass","date","mm","getMonth","dd","getDate","getFullYear","join","Originator","_this","possibleConstructorReturn","getPrototypeOf","originator_name","originator_physical_address","originator_national_identity_number","originator_date_of_birth","originator_unique_identity","transfer_open","beneficiary_open","originator_open","alert_msg","handleChange","assertThisInitialized","handleSubmit","setOpen","handleDayChange","event","setState","defineProperty","target","day","Utils","formateDate","preventDefault","_this$state","parseFloat","transferRequest","open","_this2","_this$state2","vasp_list","VASPUSNY","VASPJPJT","onSubmit","Alert_default","variant","role","onClick","Collapse_default","in","Dropdown_Dropdown","0x80000000","0x8000003c","0x80000002","0x80000091","0x80000090","placeholder","DayPickerInput_default","inputProps","format","onDayChange","connect","detail","marginTopSm","marginTop","margin","Beneficiary","btnClick","btnDecryptClick","btnVerifyClick","_event$target","transferResult","transferDecrypt","transferVerify","ButtonToolbar_default","Button_default","size","style","main_default","displayDataTypes","collapseStringsAfterLength","el","Transfer","handleClick","_sign_object$transact","aria-expanded","Bridge","open_id","showDetail","val","parentNode","getAttribute","Transfer_Transfer","marginLeft","marginRight","App","Container_default","fluid","Navbar_default","fixed","expand","bg","Brand","href","LogoImg","width","height","alt","components_Originator","components_Beneficiary","components_Bridge","Boolean","location","hostname","match","render","es","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7ee3abac.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.a50e28d5.png\";","export const ERROR = \"ERROR\";\nexport const TRANSFER_REQUEST = \"TRANSFER_REQUEST\";\nexport const TRANSFER_LOADED = \"TRANSFER_LOADED\";\nexport const TRANSFER_RESULT = \"TRANSFER_RESULT\";\nexport const TRANSFER_RESULT_SIGN = \"TRANSFER_RESULT_SIGN\";\nexport const TRANSFER_DECRYPT = \"TRANSFER_DECRYPT\";\nexport const TRANSFER_DECRYPT_RESULT = \"TRANSFER_DECRYPT_RESULT\";\nexport const TRANSFER_VERIFY = \"TRANSFER_VERIFY\";\nexport const TRANSFER_VERIFY_RESULT = \"TRANSFER_VERIFY_RESULT\";\n","import {OriginatorState} from \"./types\";\nimport {BridgeActionTypes} from \"../actions/types\";\nimport {ERROR} from \"../constants/action-types\";\n\nconst initState = {\n    transfer_info: {\n        beneficiary_vasp_code: \"\",\n        originator_addr: \"0x05ECAf39376088D7C8bF1aCc06015F71e35bFE35\",\n        originator_vasp_code: \"\",\n        beneficiary_addr: \"0x0b696FEB926675a2f8B55644A1669b43b9924C03\",\n        transaction_currency: \"0x8000003c\",\n        amount: 0.269726\n    },\n    originator_info: {\n        name: \"John Armstrong\",\n        physical_address: \"Bahnhofstrasse 665, 8001 Zurich, Switzerland\",\n        national_identity_number: \"886\",\n        date_of_birth: \"2009-01-03\",\n        unique_identity: \"John\"\n    },\n    beneficiary_info: {\n        beneficiary_name: \"Antoine Griezmann\"\n    },\n    error_msg: \"\"\n};\n\nexport function originatorReducer(state: OriginatorState = initState, action: BridgeActionTypes): OriginatorState {\n    if (action.type === ERROR){\n        return Object.assign({}, state, {\n            error_msg: action.payload\n        });\n    }\n    return state;\n}\n","export const SUCCESS = \"SUCCESS\";\nexport const FAILED = \"FAILED\";\nexport const NONE = \"NONE\";\n\nexport const WAITING = \"WAITING\";\nexport const ACCEPT = \"ACCEPTED\";\nexport const REJECT = \"REJECTED\";\n","import {BeneficiaryState} from \"./types\";\nimport {BridgeActionTypes} from \"../actions/types\";\nimport {\n    TRANSFER_DECRYPT_RESULT,\n    TRANSFER_LOADED,\n    TRANSFER_RESULT_SIGN,\n    TRANSFER_VERIFY_RESULT\n} from \"../constants/action-types\";\nimport {NONE} from \"../constants/status\";\n\nconst initialState = {\n    verified_status: NONE,\n    sign_object: {\n        \"private_info\": \"04bb2aae0e33fbe50ffb6121375a4e0f46c9003d946ba96499d5a9c30f077393dc36d89744b3749bcb23c5d523bbf7157ea55410a8bc16aa0f9c414310ec3657fb96a974aba1c1321e831857996acbcb7146c68efeaf97db5b9c6c3331fad23538b7a945f4e2dff8416144f7a0aa644d10f7c914b2507a36732cabd1fd991ed6cf120bca00d48482e27e44fd51ef19c1b85ce5d6e473de169ccbd54f15365c95515442af6833599eb07eb4a13494ca25cb885fa41e18d7611c75288d865141e65b63bf99e66ac5c1383637cb276ecf4f3f63e11f6fe92b7464970143d065d21152bab5787dd4466492a57dcf998090bff55ad2f332413c3b13ac8c362461c8c7b20ee08604cf93a59b7521f47153756c8e52eca88258821b3be6d22978685d1661b1dee99e0bd84a4f9a5325f814d47dbf2f10d67723100eb4d9b0815bbfdb05132c3813a5\",\n        \"transaction\": {\n            \"beneficiary_vasp_code\": \"VASPUSNY\",\n            \"originator_addr\": \"0x05ECAf39376088D7C8bF1aCc06015F71e35bFE35\",\n            \"originator_vasp_code\": \"VASPJPJT\",\n            \"beneficiary_addr\": \"0x0b696FEB926675a2f8B55644A1669b43b9924C03\",\n            \"transaction_currency\": \"0x8000003c\",\n            \"amount\": 0.347895\n        },\n        \"data_dt\": \"2019-08-15T10:28:10.364Z\",\n        \"signature\": \"9eee630c20a2aa894373216b32343c429621b02f29c35130e7573f4d775edd8e7fd50f1a5813a234246785a2fcd542058a0b6ca3d56bc6719b8eb14c88b19301\",\n        \"transfer_id\": \"01ca7589-f697-4637-931e-aa8922999112\"\n    },\n    private_info: {\n        \"originator\": {\n            \"name\": \"\",\n            \"date_of_birth\": \"\",\n            \"physical_address\": \"\",\n            \"national_identity_number\": \"\",\n            \"unique_identity\": \"\"\n        },\n        \"beneficiary\": {\n            \"name\": \"\"\n        }\n    }\n};\n\nexport function beneficiaryReducer(state: BeneficiaryState = initialState, action: BridgeActionTypes): BeneficiaryState {\n    const {sign_object} = state;\n    if (action.type === TRANSFER_LOADED) {\n        return Object.assign({}, state, {\n            sign_object: action.payload,\n            verified_status: NONE,\n            private_info: {\n                originator: {\n                    name: \"\",\n                    date_of_birth: \"\",\n                    physical_address: \"\",\n                    national_identity_number: \"\",\n                    unique_identity: \"\"\n                },\n                beneficiary: {\n                    name: \"\"\n                }\n            }\n        });\n    }\n    if (action.type === TRANSFER_RESULT_SIGN) {\n        const {result} = action.payload;\n        return Object.assign({}, state, {\n            sign_object: Object.assign({}, sign_object, {\n                result\n            })\n        });\n    }\n    if (action.type === TRANSFER_DECRYPT_RESULT) {\n        return Object.assign({}, state, {\n            private_info: action.payload\n        });\n    }\n    if (action.type === TRANSFER_VERIFY_RESULT) {\n        return Object.assign({}, state, {\n            verified_status: action.payload\n        });\n    }\n    return state;\n}\n","import {BridgeState} from \"./types\";\nimport {BridgeActionTypes} from \"../actions/types\";\nimport {TRANSFER_LOADED, TRANSFER_RESULT_SIGN} from \"../constants/action-types\";\n\nconst initState = {\n    sign_objects: [\n        {\n            \"private_info\": \"0463819c52c6db0f5bd28d51eb7b53e8ad8e89294921ecdabc5c602e85825528cfaa33df614c0e25edaf97b9e0216ced0bb2bc4c8eb51f47a4e956f34a4012adf51852bda9a05df2b5d48ca2ea4f804b1b35040c23939d9f61188038efd6833ac7c8ee399eaf7855fda58b3a91301bfc95bed7bb9056a459f586149e04908a0c736ed1ff2d107228c440b323981899102612cae42d2596e40493770d4224cd82e0a040b5d7e1ac3812f6683200d094a92fafcd0add98350fb8b39b62df3025cad2425997a5aac358ab9252be0bc0f2f84908271e5c3050566e5908356e00bdea455b2e1883e44fe6733e77f0637f3e99c9d08ceb5628fed29ab5d9ef12bfd9f165db984a8228ac99302d02ca9d858e602207100601cf6d5e2e9e713d4b340e55da4cdf8dd0436c38b8ebb6013f4d450feb088de5bc52c5daddbe8ab5f6ff59146987d4d2bd\",\n            \"transaction\": {\n                \"beneficiary_vasp_code\": \"VASPUSNY\",\n                \"originator_addr\": \"0x05ECAf39376088D7C8bF1aCc06015F71e35bFE35\",\n                \"originator_vasp_code\": \"VASPJPJT\",\n                \"beneficiary_addr\": \"0x0b696FEB926675a2f8B55644A1669b43b9924C03\",\n                \"transaction_currency\": \"0x8000003c\",\n                \"amount\": 0.347895\n            },\n            \"data_dt\": \"2019-08-16T02:37:33.582Z\",\n            \"signature\": \"3a61dab5a821bdb67e65990a88ff4950f045442e753d58575392a85954073be77e2f0a1f34de3c36e0f4e49272e2350af1beff22a9344ba5e239203b7718f5fc\",\n            \"transfer_id\": \"92d00213-80da-41d3-8c39-38e6c8b9a373\"\n        }\n    ]\n}\n\nexport function bridgeReducer(state: BridgeState = initState, action: BridgeActionTypes): BridgeState {\n    if (action.type === TRANSFER_LOADED) {\n        return Object.assign({}, state, {\n            sign_objects: [...state.sign_objects, action.payload]\n        });\n    }\n    if (action.type === TRANSFER_RESULT_SIGN) {\n        const {sign_objects} = state;\n        const {transfer_id} = action.payload;\n        const index = sign_objects.findIndex(x => x.transfer_id === transfer_id);\n        const target_object = sign_objects[index];\n        const new_object = Object.assign({}, target_object, {\n            result: action.payload.result,\n            beneficiary_result: action.payload\n        });\n        return Object.assign({}, state, {\n            sign_objects: [\n                ...sign_objects.slice(0, index), // everything before current post\n                new_object,\n                ...sign_objects.slice(index + 1), // everything after current post\n            ]\n        });\n    }\n    return state;\n}\n","import {combineReducers} from 'redux';\nimport {BeneficiaryState, BridgeState, OriginatorState} from \"./types\";\nimport {originatorReducer} from \"./originatorReducer\";\nimport {beneficiaryReducer} from \"./beneficiaryReducer\";\nimport {bridgeReducer} from \"./bridgeReducer\";\n\nexport interface AppState {\n    originator: OriginatorState,\n    beneficiary: BeneficiaryState,\n    bridge: BridgeState\n}\n\nconst rootReducer = combineReducers<AppState>({\n    originator: originatorReducer,\n    beneficiary: beneficiaryReducer,\n    bridge: bridgeReducer,\n});\n\nexport default rootReducer;\n","export const BENEFICIARY_PUBLIC_KEY = \"036410211aae9f73e8ba94674fbf53f9d83f6898ec6b32ea2cb39e9a8dbc6355c4\";\nexport const BENEFICIARY_PRIVATE_KEY = \"eb8473f97dedf6139e88f9bd7b6116cd03c847e236f0532b7c2f8b13efbf8f32\";\nexport const ORIGINATOR_PUBLIC_KEY = \"02559d91b7e516e8d10ceac09611f58932b6b7481860c3ca75ead31bdc27e3910f\";\nexport const ORIGINATOR_PRIVATE_KEY = \"ca44fe863b0ca6edbc2ae73de26eb0f947f93211a7aa9a1fcb73d40080fba457\";\n\n","import { takeEvery, call, put } from \"redux-saga/effects\";\nexport default function* watcherSage() {\n    yield takeEvery(\"DATA_REQUESTED\", workerSaga);\n}\nfunction* workerSaga() {\n    try {\n        const payload = yield call(getData);\n        yield put({ type: \"DATA_LOADED\", payload });\n    } catch(e){\n        yield put({ type: \"API_ERRORED\", payload:e });\n    }\n}\n\nfunction getData() {\n    return fetch(\"https://jsonplaceholder.typicode.com/posts\").then(response =>\n        response.json()\n    );\n}\n","import {applyMiddleware, compose, createStore} from \"redux\";\nimport rootReducer from \"../reducers/index\";\nimport {bridgeMiddleware} from \"../middleware\";\nimport createSagaMiddleware from \"redux-saga\";\nimport apiSaga from \"../sagas/api-saga\";\n\nconst initialiseSagaMiddleware = createSagaMiddleware();\n\nconst storeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n    rootReducer,\n    storeEnhancers(applyMiddleware(bridgeMiddleware, initialiseSagaMiddleware))\n);\n\ninitialiseSagaMiddleware.run(apiSaga);\n\nexport default store;\n","import {TRANSFER_DECRYPT, TRANSFER_REQUEST, TRANSFER_RESULT, TRANSFER_VERIFY} from \"../constants/action-types\";\nimport {BridgeActionTypes} from \"../actions/types\";\nimport {Dispatch} from \"redux\";\nimport {transferDecryptResult, transferLoaded, transferResultSign, transferVerifyResult} from \"../actions\";\n// @ts-ignore\nimport {crypto} from \"sygna-bridge-util/index\";\nimport {\n    BENEFICIARY_PRIVATE_KEY,\n    BENEFICIARY_PUBLIC_KEY,\n    ORIGINATOR_PRIVATE_KEY,\n    ORIGINATOR_PUBLIC_KEY\n} from \"../constants/env\";\nimport uuidv1 from \"uuid\";\nimport {FAILED, SUCCESS} from \"../constants/status\";\n\ninterface MiddlewareProps {\n    dispatch: Dispatch\n}\n\nexport function bridgeMiddleware({dispatch}: MiddlewareProps) {\n    return function (next: Function) {\n        return function (action: BridgeActionTypes) {\n            if (action.type === TRANSFER_REQUEST) {\n                const {originator_info, transfer_info, beneficiary_info} = action.payload;\n                const encrypt_info = {\n                    originator: {\n                        name: originator_info.name,\n                        date_of_birth: originator_info.date_of_birth,\n                        physical_address: originator_info.physical_address,\n                        national_identity_number: originator_info.national_identity_number,\n                        unique_identity: originator_info.unique_identity\n                    },\n                    beneficiary:{\n                        name: beneficiary_info.beneficiary_name\n                    }\n                };\n                const private_info = crypto.sygnaEncodePrivateObj(encrypt_info, BENEFICIARY_PUBLIC_KEY);\n                const data_dt = new Date();\n                let sign_object = crypto.signTransferData(private_info, transfer_info, data_dt.toISOString(), ORIGINATOR_PRIVATE_KEY);\n                sign_object.transfer_id = uuidv1();\n                return dispatch(transferLoaded(sign_object));\n            }\n            if (action.type === TRANSFER_RESULT) {\n                const {transfer_id, result} = action.payload;\n                let sign_result = crypto.signResult(transfer_id, result, BENEFICIARY_PRIVATE_KEY);\n                return dispatch(transferResultSign(sign_result));\n            }\n            if (action.type === TRANSFER_DECRYPT) {\n                let decode = crypto.sygnaDecodePrivateObg(action.payload, BENEFICIARY_PRIVATE_KEY);\n                return dispatch(transferDecryptResult(decode));\n            }\n            if (action.type === TRANSFER_VERIFY) {\n                const filtered = {...action.payload};\n                delete filtered.transfer_id;\n                delete filtered.result;\n                let verify_result = crypto.verifyObject(filtered, ORIGINATOR_PUBLIC_KEY);\n                return dispatch(transferVerifyResult((verify_result) ? SUCCESS : FAILED))\n            }\n            return next(action);\n        }\n    }\n}\n","import {\n    ERROR, TRANSFER_DECRYPT, TRANSFER_DECRYPT_RESULT,\n    TRANSFER_LOADED,\n    TRANSFER_REQUEST, TRANSFER_RESULT, TRANSFER_RESULT_SIGN, TRANSFER_VERIFY, TRANSFER_VERIFY_RESULT\n} from \"../constants/action-types\";\nimport {BridgeActionTypes} from \"./types\";\nimport {TransferDetail, TransferResult} from \"../reducers/types\";\n\nexport function foundError(payload: string): BridgeActionTypes {\n    return {\n        type: ERROR,\n        payload\n    };\n};\n\nexport function transferRequest(payload: TransferDetail): BridgeActionTypes {\n    return {\n        type: TRANSFER_REQUEST,\n        payload\n    };\n};\n\nexport function transferLoaded(payload: object): BridgeActionTypes {\n    return {\n        type: TRANSFER_LOADED,\n        payload\n    };\n};\n\nexport function transferResult(payload: any): BridgeActionTypes {\n    return {\n        type: TRANSFER_RESULT,\n        payload\n    };\n};\n\nexport function transferResultSign(payload: TransferResult): BridgeActionTypes {\n    return {\n        type: TRANSFER_RESULT_SIGN,\n        payload\n    };\n};\n\nexport function transferDecrypt(payload: string): BridgeActionTypes {\n    return {\n        type: TRANSFER_DECRYPT,\n        payload\n    };\n};\n\nexport function transferDecryptResult(payload: any): BridgeActionTypes {\n    return {\n        type: TRANSFER_DECRYPT_RESULT,\n        payload\n    };\n};\n\nexport function transferVerify(payload: any): BridgeActionTypes {\n    return {\n        type: TRANSFER_VERIFY,\n        payload\n    };\n};\n\nexport function transferVerifyResult(payload: string): BridgeActionTypes {\n    return {\n        type: TRANSFER_VERIFY_RESULT,\n        payload\n    };\n};\n","import React from \"react\";\n\nexport default class Dropdown extends React.Component {\n\n    onChange(e) {\n        const {onChange} = this.props;\n        onChange(e);\n    }\n\n    render() {\n        const {id, src, selectRef, selectedValue, title, marginClass} = this.props;\n        const className = \"form-control \" + marginClass;\n        return (\n            <select id={id} className={className} ref={selectRef} onChange={this.onChange.bind(this)}\n                    value={selectedValue}>\n                <option value=\"\" disabled>{title}</option>\n                {Object.keys(src).map((key, idx) => {\n                        const item = src[key];\n                        return (\n                            <option key={key} value={key}>{item}</option>\n                        )\n                    }\n                )}\n            </select>\n        );\n    }\n}\n","import {Locale} from \"./locale.ts\";\n\nexport default {\n    Locale\n};\n\n","export class Locale {\n    static formateDate(date: Date) {\n        var mm = date.getMonth() + 1; // getMonth() is zero-based\n        var dd = date.getDate();\n\n        return [date.getFullYear(),\n            (mm > 9 ? '' : '0') + mm,\n            (dd > 9 ? '' : '0') + dd\n        ].join('-');\n    }\n}\n","import React, {Component} from \"react\";\nimport {Dispatch} from \"redux\";\nimport {BeneficiaryInfo, OriginatorInfo, TransferDetail, TransferInfo} from \"../reducers/types\";\nimport {transferRequest} from \"../actions\";\nimport {AppState} from \"../reducers\";\nimport {connect} from \"react-redux\";\nimport Alert from \"react-bootstrap/Alert\";\nimport Collapse from \"react-bootstrap/Collapse\";\nimport Dropdown from \"./Picker/Dropdown.jsx\";\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\nimport Utils from \"../utils\";\n\ninterface OriginatorProps {\n    transferRequest: Function;\n    transfer_info: TransferInfo;\n    originator_info: OriginatorInfo;\n    beneficiary_info: BeneficiaryInfo;\n    error_msg: string;\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        transferRequest: (detail: TransferDetail) => dispatch(transferRequest(detail))\n    };\n};\n\nconst mapStateToProps = (state: AppState) => {\n    const {originator} = state;\n    return {\n        transfer_info: originator.transfer_info,\n        originator_info: originator.originator_info,\n        beneficiary_info: originator.beneficiary_info,\n        error_msg: originator.error_msg\n    }\n};\n\nclass Originator extends Component<OriginatorProps, any> {\n    constructor(props: OriginatorProps) {\n        super(props);\n        this.state = {\n            transaction_currency: \"0x8000003c\",\n            amount: 0.347895,\n            beneficiary_addr: \"0x0b696FEB926675a2f8B55644A1669b43b9924C03\",\n            originator_vasp_code: \"VASPJPJT\",\n            originator_name: \"David Beckham\",\n            beneficiary_vasp_code: \"VASPUSNY\",\n            beneficiary_name: \"Antoine Griezmann\",\n            originator_addr: \"0x05ECAf39376088D7C8bF1aCc06015F71e35bFE35\",\n            originator_physical_address: \"Bahnhofstrasse 665, 8001 Zurich, Switzerland\",\n            originator_national_identity_number: \"\",\n            originator_date_of_birth: \"1975-05-02\",\n            originator_unique_identity: \"\",\n            transfer_open: true,\n            beneficiary_open: true,\n            originator_open: true,\n            alert_msg: \"\"\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.setOpen = this.setOpen.bind(this);\n        this.handleDayChange = this.handleDayChange.bind(this);\n    }\n\n    handleChange(event: any) {\n        this.setState({[event.target.id]: event.target.value});\n    }\n\n    handleDayChange(day: any) {\n        this.setState({originator_date_of_birth: Utils.Locale.formateDate(day) });\n    }\n\n    handleSubmit(event: any) {\n        event.preventDefault();\n        const {\n            transaction_currency,\n            amount,\n            beneficiary_addr,\n            originator_vasp_code,\n            originator_name,\n            beneficiary_vasp_code,\n            beneficiary_name,\n            originator_addr,\n            originator_physical_address,\n            originator_national_identity_number,\n            originator_date_of_birth,\n            originator_unique_identity\n        } = this.state;\n        const transfer_info = Object.assign({}, this.props.transfer_info, {\n            beneficiary_vasp_code,\n            originator_addr,\n            originator_vasp_code,\n            beneficiary_addr,\n            transaction_currency,\n            amount: parseFloat(amount)\n        });\n        const originator_info = Object.assign({}, this.props.originator_info, {\n            name: originator_name,\n            physical_address: originator_physical_address,\n            national_identity_number: originator_national_identity_number,\n            date_of_birth: originator_date_of_birth,\n            unique_identity: originator_unique_identity\n        });\n        const beneficiary_info = Object.assign({}, this.props.beneficiary_info, {\n            beneficiary_name\n        });\n        this.props.transferRequest({\n            transfer_info,\n            originator_info,\n            beneficiary_info\n        });\n    }\n\n    setOpen(event: any, open: boolean) {\n        this.setState({[event.target.id]: open});\n    }\n\n    render() {\n        const {\n            transaction_currency,\n            amount,\n            beneficiary_addr,\n            originator_vasp_code,\n            originator_name,\n            beneficiary_vasp_code,\n            beneficiary_name,\n            originator_addr,\n            originator_physical_address,\n            originator_national_identity_number,\n            originator_date_of_birth,\n            originator_unique_identity,\n            transfer_open,\n            beneficiary_open,\n            originator_open,\n        } = this.state;\n        const {error_msg} = this.props;\n        const vasp_list = {\n            \"VASPUSNY\": \"VASP in New York, USA\",\n            \"VASPJPJT\": \"VASP in Tokyo, Japan\"\n        };\n        const currency_list = {\n            \"0x80000000\": \"BTC\",\n            \"0x8000003c\": \"ETH\",\n            \"0x80000002\": \"LTC\",\n            \"0x80000091\": \"BCH\",\n            \"0x80000090\": \"XRP\",\n        };\n        return (\n            <form onSubmit={this.handleSubmit}>\n                {error_msg && (\n                    <Alert variant='danger'>\n                        {error_msg}\n                    </Alert>\n                )}\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <div className=\"alert alert-primary\" role=\"alert\" id=\"transfer_open\"\n                             onClick={(event: any) => this.setOpen(event, !transfer_open)}>\n                            Transfer Info\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <Collapse in={transfer_open}>\n                            <div id=\"collapse-transfer\" className=\"form-group\">\n                                <div className=\"input-group\">\n                                    <Dropdown id=\"transaction_currency\" src={currency_list} title=\"Choose Currency\"\n                                              marginClass=\"mt-1\"\n                                              selectedValue={transaction_currency}\n                                              onChange={this.handleChange}/>\n                                </div>\n                                <div className=\"input-group\">\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control mt-1\"\n                                        id=\"amount\"\n                                        value={amount}\n                                        placeholder=\"Amount\"\n                                        onChange={this.handleChange}\n                                    />\n                                </div>\n                            </div>\n                        </Collapse>\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <div className=\"alert alert-secondary\" role=\"alert\" id=\"beneficiary_open\"\n                             onClick={(event: any) => this.setOpen(event, !beneficiary_open)}>\n                            Beneficiary Info\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <Collapse in={beneficiary_open}>\n                            <div id=\"collapse-beneficiary\" className=\"form-group\">\n                                <div className=\"input-group\">\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control mt-1\"\n                                        id=\"beneficiary_name\"\n                                        value={beneficiary_name}\n                                        placeholder=\"Beneficiary Name\"\n                                        onChange={this.handleChange}\n                                    />\n                                    <Dropdown id=\"beneficiary_vasp_code\" src={vasp_list} title=\"Choose Beneficiary VASP\"\n                                              marginClass=\"mt-1 ml-1\"\n                                              selectedValue={beneficiary_vasp_code}\n                                              onChange={this.handleChange}/>\n                                </div>\n                                <div className=\"input-group\">\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control mt-1\"\n                                        id=\"beneficiary_addr\"\n                                        value={beneficiary_addr}\n                                        placeholder=\"Beneficiary Virtual Asset Address\"\n                                        onChange={this.handleChange}\n                                    />\n                                </div>\n                            </div>\n                        </Collapse>\n                    </div>\n                </div>\n\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <div className=\"alert alert-secondary\" role=\"alert\" id=\"originator_open\"\n                             onClick={(event: any) => this.setOpen(event, !originator_open)}>\n                            Originator Info\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <Collapse in={originator_open}>\n                            <div id=\"collapse-originator\" className=\"form-group\">\n                                <div className=\"input-group\">\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control mt-1\"\n                                        id=\"originator_name\"\n                                        value={originator_name}\n                                        placeholder=\"Name\"\n                                        onChange={this.handleChange}\n                                    />\n                                    <Dropdown id=\"originator_vasp_code\" src={vasp_list} title=\"Choose Originator VASP\"\n                                              marginClass=\"mt-1 ml-1\"\n                                              selectedValue={originator_vasp_code}\n                                              onChange={this.handleChange}/>\n                                </div>\n                                <div className=\"input-group\">\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control mt-1\"\n                                        id=\"originator_addr\"\n                                        value={originator_addr}\n                                        placeholder=\"Originator Virtual Asset Address\"\n                                        onChange={this.handleChange}\n                                    />\n                                </div>\n                                <div className=\"input-group\">\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control mt-1\"\n                                        id=\"originator_physical_address\"\n                                        value={originator_physical_address}\n                                        placeholder=\"Physical Address\"\n                                        onChange={this.handleChange}\n                                    />\n                                </div>\n                                <div className=\"input-group\">\n                                    <DayPickerInput\n                                        inputProps={{className: 'form-control mt-1'}}\n                                        format=\"YYYY-MM-DD\"\n                                        onDayChange={this.handleDayChange}\n                                        placeholder=\"Date of birth\"\n                                        value={originator_date_of_birth}\n                                    />\n                                </div>\n                                <div className=\"input-group\">\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control mt-1\"\n                                        id=\"originator_national_identity_number\"\n                                        value={originator_national_identity_number}\n                                        placeholder=\"National Identity Number\"\n                                        onChange={this.handleChange}\n                                    />\n                                </div>\n                                <div className=\"input-group\">\n                                    <input\n                                        type=\"text\"\n                                        className=\"form-control mt-1\"\n                                        id=\"originator_unique_identity\"\n                                        value={originator_unique_identity}\n                                        placeholder=\"Unique Identity\"\n                                        onChange={this.handleChange}\n                                    />\n                                </div>\n                            </div>\n                        </Collapse>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <button type=\"submit\" className=\"btn btn-success btn-lg\">\n                            Send\n                        </button>\n                    </div>\n                </div>\n            </form>\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Originator);\n","import React, {Component} from \"react\";\nimport {AppState} from \"../reducers\";\nimport {connect} from \"react-redux\";\nimport ReactJson from 'react-json-view'\nimport ButtonToolbar from \"react-bootstrap/ButtonToolbar\";\nimport Button from \"react-bootstrap/Button\";\nimport {Dispatch} from \"redux\";\nimport {transferDecrypt, transferResult, transferVerify} from \"../actions\";\nimport {ACCEPT, NONE, REJECT, SUCCESS} from \"../constants/status\";\nimport Alert from \"react-bootstrap/Alert\";\n\ninterface BeneficiaryProps {\n    transferResult: Function,\n    transferDecrypt: Function,\n    transferVerify: Function,\n    verified_status: string,\n    sign_object: any,\n    private_info: any\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n    return {\n        transferResult: (el: any) => dispatch(transferResult(el)),\n        transferDecrypt: (el: string) => dispatch(transferDecrypt(el)),\n        transferVerify: (el: any) => dispatch(transferVerify(el)),\n    };\n};\n\nconst mapStateToProps = (state: AppState) => {\n    const {beneficiary} = state;\n    return {\n        verified_status: beneficiary.verified_status,\n        sign_object: beneficiary.sign_object,\n        private_info: beneficiary.private_info\n    }\n};\n\nconst marginTopSm = {\n    marginTop: '10px'\n};\n\nconst margin = {\n    margin: '2px'\n};\n\nclass Beneficiary extends Component<BeneficiaryProps, any> {\n    constructor(props: BeneficiaryProps) {\n        super(props)\n        this.state = {};\n        this.btnClick = this.btnClick.bind(this);\n        this.btnDecryptClick = this.btnDecryptClick.bind(this);\n        this.btnVerifyClick = this.btnVerifyClick.bind(this);\n    }\n\n    btnClick(event: any) {\n        event.preventDefault();\n        const {id, value} = event.target;\n        this.props.transferResult({\n            transfer_id: value,\n            result: id\n        });\n    }\n\n    btnDecryptClick(event: any) {\n        event.preventDefault();\n        const {private_info} = this.props.sign_object;\n        this.props.transferDecrypt(private_info);\n    }\n\n    btnVerifyClick(event: any) {\n        event.preventDefault();\n        this.props.transferVerify(this.props.sign_object);\n    }\n\n    render() {\n        const {\n            verified_status,\n            sign_object,\n            private_info\n        } = this.props;\n        const {transfer_id} = sign_object;\n        const variant = (verified_status === SUCCESS)? \"success\": \"danger\";\n        return (\n            <div>\n                <div className=\"row\">\n                    <div className=\"col-md\">\n                        <ButtonToolbar>\n                            <Button\n                                value={transfer_id}\n                                variant=\"primary\"\n                                size=\"lg\"\n                                style={margin}\n                                onClick={(event: any) => {\n                                    this.btnVerifyClick(event)\n                                }}\n                            >Verify</Button>\n                            <Button\n                                value={transfer_id}\n                                variant=\"secondary\"\n                                size=\"lg\"\n                                style={margin}\n                                onClick={(event: any) => {\n                                    this.btnDecryptClick(event)\n                                }}\n                            >Decrypt</Button>\n                            <Button\n                                id={ACCEPT}\n                                value={transfer_id}\n                                variant=\"success\"\n                                size=\"lg\"\n                                style={margin}\n                                onClick={(event: any) => {\n                                    this.btnClick(event)\n                                }}\n                            >Accept</Button>\n                            <Button\n                                id={REJECT}\n                                value={transfer_id}\n                                variant=\"secondary\"\n                                size=\"lg\"\n                                style={margin}\n                                onClick={(event: any) => {\n                                    this.btnClick(event)\n                                }}\n                            >Reject</Button>\n                        </ButtonToolbar>\n                    </div>\n                </div>\n                {(verified_status !== NONE) && (\n                    <Alert variant={variant}>\n                        {verified_status}\n                    </Alert>\n                )}\n                <div className=\"row\" style={marginTopSm}>\n                    <div className=\"col-md\">\n                        <ReactJson name=\"transfer_info\" displayDataTypes={false} src={sign_object} collapseStringsAfterLength={30}/>\n                        <ReactJson name=\"private_info\" displayDataTypes={false} src={private_info} collapseStringsAfterLength={30}/>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Beneficiary);\n","import React, {Component} from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Collapse from \"react-bootstrap/Collapse\";\nimport ReactJson from \"react-json-view\";\nimport {WAITING} from \"../../constants/status\";\n\nexport default class Transfer extends Component {\n    render() {\n        const {\n            idx,\n            sign_object,\n            open,\n            handleClick\n        } = this.props;\n        const {\n            originator_vasp_code,\n            beneficiary_vasp_code\n        } = sign_object.transaction;\n        const {transfer_id, result} = sign_object;\n        return [\n            <div key={`${transfer_id}`} className=\"row py-2\" id={transfer_id} value={open}\n                 onClick={(event) => {\n                     handleClick(event)\n                 }}>\n                <div className=\"col-1\">{idx + 1}</div>\n                <div className=\"col\">{originator_vasp_code}</div>\n                <div className=\"col\">{beneficiary_vasp_code}</div>\n                <div className=\"col\">{(result) ? result : WAITING}</div>\n                <div className=\"col d-none d-sm-block\">\n                    <Button variant=\"info\" size=\"sm\"\n                            aria-expanded={open}\n                            value={open}\n                            onClick={(event) => {\n                                handleClick(event)\n                            }}>Detail\n                    </Button>\n                </div>\n            </div>,\n            <Collapse key={`Collapse-${transfer_id}`} in={open}>\n                <div className=\"row py-2 bridge_detail\">\n                    <div className=\"col\">\n                        <ReactJson src={sign_object} displayDataTypes={false} collapseStringsAfterLength={30}/>\n                    </div>\n                </div>\n            </Collapse>\n        ];\n    }\n}\n","import React, {Component} from \"react\";\nimport {AppState} from \"../reducers\";\nimport {connect} from \"react-redux\";\nimport Transfer from \"./List/Transfer.jsx\";\n\ninterface BridgeProps {\n    sign_objects: Array<any>;\n}\n\nconst mapStateToProps = (state: AppState) => {\n    const {bridge} = state;\n    return {\n        sign_objects: bridge.sign_objects\n    }\n};\n\nclass Bridge extends Component<BridgeProps, any> {\n    constructor(props: BridgeProps) {\n        super(props);\n        this.state = {\n            open_id: \"\"\n        };\n        this.showDetail = this.showDetail.bind(this);\n    }\n\n    showDetail(event: any, transfer_id: string, idx: number = 0) {\n        event.preventDefault();\n        let val;\n        if(event.target.type !== \"button\"){\n            val = event.target.parentNode.getAttribute(\"value\")\n        } else {\n            val = event.target.value\n        }\n        this.setState({\n            open_id: (val === \"true\") ? \"\" : transfer_id\n        });\n    }\n\n    render() {\n        const {sign_objects} = this.props;\n        return (\n            <div className=\"grid-striped\">\n                <div className=\"row font-weight-bold py-2\">\n                    <div className=\"col-1\">#</div>\n                    <div className=\"col\">Originator VASP code</div>\n                    <div className=\"col\">Beneficiary VASP code</div>\n                    <div className=\"col\">Result</div>\n                    <div className=\"col d-none d-sm-block\"></div>\n                </div>\n                {sign_objects.map((el, idx) => (\n                        <Transfer\n                            key={idx}\n                            idx={idx}\n                            open={(this.state.open_id === el.transfer_id) ? true : false}\n                            sign_object={el}\n                            handleClick={(event: any) => this.showDetail(event, el.transfer_id, idx)}\n                        />\n                    )\n                )}\n            </div>\n        );\n    }\n};\n\nexport default connect(mapStateToProps)(Bridge);\n","import React from \"react\";\nimport Originator from \"./Originator\";\nimport Container from \"react-bootstrap/Container\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport LogoImg from \"../../assets/img/logo.png\";\nimport Beneficiary from \"./Beneficiary\";\nimport Bridge from \"./Bridge\";\n\nconst marginTop = {\n    marginTop: '60px',\n    marginLeft: '2px',\n    marginRight: '2px'\n};\nconst marginTopSm = {\n    marginTop: '10px',\n};\n\nconst App = () => (\n    <Container fluid={true}>\n        <Navbar fixed=\"top\" expand=\"lg\" bg=\"dark\" variant=\"dark\">\n            <Navbar.Brand href=\"#\">\n                <img\n                    src={LogoImg}\n                    width=\"120\"\n                    height=\"30\"\n                    className=\"d-inline-block align-top\"\n                    alt=\"Sygna Bridge\"\n                />\n            </Navbar.Brand>\n        </Navbar>\n\n        <div className=\"row\" style={marginTop}>\n            <div className=\"col-md-6 order-md-1 order-sm-1 order-1 pt-md-3 pl-md-3 pr-md-3 p-0 pt-3\">\n                <h2>Originator VASP</h2>\n                <div style={marginTopSm}>\n                    <Originator/>\n                </div>\n            </div>\n            <div className=\"col-md-6 order-md-2 order-sm-3 order-3 pt-md-3 pl-md-3 pr-md-3 p-0 pt-3\">\n                <h2>Beneficiary VASP</h2>\n                <div style={marginTopSm}>\n                    <Beneficiary/>\n                </div>\n            </div>\n            <div className=\"col-md-12 order-md-3 order-sm-2 order-2 pt-md-3 pl-md-3 pr-md-3 p-0 pt-3\">\n                <h2>Bridge</h2>\n                <div style={marginTopSm}>\n                    <Bridge/>\n                </div>\n            </div>\n        </div>\n    </Container>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./js/store/index\";\nimport App from \"./js/components/App\";\nimport './assets/css/App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'react-day-picker/lib/style.css';\nimport { unregister } from './serviceWorker';\n\nrender(\n  <Provider store={store}>\n      <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nunregister();\n"],"sourceRoot":""}